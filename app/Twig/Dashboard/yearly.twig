{% extends 'templateBase.twig' %}
{% block css %}
	{{parent()}}
	<link rel="stylesheet" href="\assets\css\dashboard.css?version={{versionScripts}}" rel="stylesheet">
{% endblock %}
{% block content %}
	<div class="summary-button-control card d-flex justify-content-between align-items-center flex-row">
		<a class="d-flex" title="Ano anterior" href="/dashboard/yearly/{{ year - 1 }}">
			<i class="bx bx-skip-previous-circle"></i>
		</a>
		<div class="d-flex flex-1 card-title">
			Resumo do ano
			{{ year }}
		</div>
		<a class="d-flex" title="Próximo ano" href="/dashboard/yearly/{{ year + 1 }}">
			<i class="bx bx-skip-next-circle"></i>
		</a>
	</div>
	<div class="row">
		<div class="col-lg-4 col-xxl-4 col-md-4">
			<canvas id="barChartLucro" style="max-height: 400px;"></canvas>
		</div>
		<div class="col-lg-4 col-xxl-4 col-md-4">
			<canvas id="barChartBuyIn" style="max-height: 400px;"></canvas>
		</div>
		<div class="col-lg-4 col-xxl-4 col-md-4">
			<canvas id="barChartCotas" style="max-height: 400px;"></canvas>
		</div>
	</div>
	<div class="card">
		<div class="card-body">
			{% set totalProfitYear = array_sum(array_column(yearlySumary, 'profit')) %}
			{% set countBuyIns = array_sum(array_column(yearlySumary, 'countBuyIns')) %}
			{% set totalBuyIn = array_sum(array_column(yearlySumary, 'totalBuyIn')) %}
			{% set totalITM = array_sum(array_column(yearlySumary, 'countITM')) %}
			{% set sumAbi = array_sum(array_column(yearlySumary, 'avgBuyIn')) %}
			{% if count(yearlySumary) > 0%}
				{% set  ABI = sumAbi / count(yearlySumary) %}
			{% else %}
				{% set ABI = 0 %}
			{% endif %}

			{% if totalProfitYear > 0 %}
				{% set classTextProfit = 'text-success' %}
			{% elseif totalProfitYear < 0 %}
				{% set classTextProfit = 'text-danger' %}
			{% else %}
				{% set classTextProfit = 'text-light' %}
			{% endif %}
			<small>* O ITM neste cenário leva em conta a premiação com bounty. Por exemplo: se você não entrou na faixa de ITM do torneio, mas pegou um bounty e registrou como prêmio, o sistema irá considerar ITM.</small>
			<div class='d-flex justify-content-center bg-secondary text-light'>Resumo dos registros</div>
			<div class="bg-light grid-summary-data">
				<div class="p-2">Registros:
					{{ countBuyIns }}</div>
				<div class="p-2">ABI:
					{{ dolarFormat(ABI) }}</div>
				<div class="p-2">ITM:
					{{ (totalITM) }}</div>
				<div class="p-2">% ITM:
					{% if countBuyIns> 0 %}
						{{ percent((totalITM / countBuyIns )*100) }}
					{% endif %}
				</div>
				<div class="p-2">Total $ buy-ins:
					{{ dolarFormat(totalBuyIn) }}</div>
				<div class="p-2">Retorno $ de Cotas:
					{{ dolarFormat(array_sum(array_column(yearlySumary, 'stakingReturn'))) }}</div>
				<div class="p-2">Total premiação:
					{{ dolarFormat(array_sum(array_column(yearlySumary, 'totalPrize'))) }}</div>

				<div class="p-2 {{ classTextProfit }}">Lucro ano:
					{{ dolarFormat(totalProfitYear) }}</div>
			</div>
			<div class="table-responsive">
				<table class="table table-bordered">
					<thead>
						<tr class='bg-secondary text-light nowrap'>
							<th>Mês</th>
							<th>Registros</th>
							<th>ABI</th>
							<th>$ Buy ins</th>
							<th>ITM</th>
							<th>% ITM</th>
							<th>Retorno de cotas</th>
							<th>Premiação</th>
							<th>$ Lucro</th>
						</tr>
					</thead>
					{% for mes in yearlySumary %}
						{% if mes['profit'] > 0 %}
							{% set classTextProfit = 'text-success' %}
						{% elseif mes['profit'] < 0 %}
							{% set classTextProfit = 'text-danger' %}
						{% else %}
							{% set classTextProfit = 'text-secondary' %}
						{% endif %}
						<tr class="{{ classTextProfit }}">
							<td>{{ mes.mesBuyin }}</td>
							<td>{{ mes.countBuyIns }}</td>
							<td class='text-end'>{{ dolarFormat(mes.avgBuyIn) }}</td>
							<td class='text-end'>{{ dolarFormat(mes.totalBuyIn) }}</td>
							<td>{{ mes.countITM }}</td>
							<td class='text-end'>{{ percent(mes.percentageITM) }}</td>
							<td class='text-end'>{{ dolarFormat(mes.stakingReturn) }}</td>
							<td class='text-end'>{{ dolarFormat(mes.totalPrize) }}</td>
							<td class='text-end'>{{ dolarFormat(mes.profit) }}</td>
						</tr>
					{% endfor %}
				</table>
			</div>
		</div>
	</div>
	<script>
		// variáveis do gráfico
var barChartLucro = {{ barChartLucro }};
var barChartBuyIn = {{ barChartBuyIn }};
var barChartCotas = {{ barChartCotas }};
	</script>
{% endblock %}

{% block scriptsFooter %}
	{{ parent() }}
	<!-- Bar Chart -->
	<script>
		// document.addEventListener("DOMContentLoaded", () => {
$(document).ready(function () {
new Chart(document.querySelector("#barChartLucro"), {
type: "bar",
data: {
labels: barChartLucro["labels"],
datasets: [
{
label: "Gráfico de Lucro ou prejuízo",
data: barChartLucro["dataValues"],
backgroundColor: barChartLucro["cores"],
borderColor: barChartLucro["cores"],
borderWidth: 1
}
]
},
options: {
scales: {
y: {
beginAtZero: true,
ticks: { // Include a dollar sign in the ticks
callback: function (value, index, ticks) {
return "$" + value;
}
}
}
}
}
});


new Chart(document.querySelector("#barChartBuyIn"), {
type: "bar",
data: {
labels: barChartBuyIn["labels"],
datasets: [
{
label: "Gráfico de Buy in",
data: barChartBuyIn["dataValues"],
backgroundColor: barChartBuyIn["cores"],
borderColor: barChartBuyIn["cores"],
borderWidth: 1
}
]
},
options: {
scales: {
y: {
beginAtZero: true,
ticks: { // Include a dollar sign in the ticks
callback: function (value, index, ticks) {
return "$" + value;
}
}
}
}
}
});


new Chart(document.querySelector("#barChartCotas"), {
type: "bar",
data: {
labels: barChartCotas["labels"],
datasets: [
{
label: "Gráfico de Cotas",
data: barChartCotas["dataValues"],
backgroundColor: barChartCotas["cores"],
borderColor: barChartCotas["cores"],
borderWidth: 1
}
]
},
options: {
scales: {
y: {
beginAtZero: true,
ticks: { // Include a dollar sign in the ticks
callback: function (value, index, ticks) {
return "$" + value;
}
}
}
}
}
});
});
	</script>
	<!-- End Bar CHart -->
{% endblock %}
